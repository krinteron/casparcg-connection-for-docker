name: Node CI

on:
  push:
    branches:
      - '**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Prepare Environment
        run: |
          yarn install
          yarn build
        env:
          CI: true
      - name: Run typecheck and linter
        run: |
          yarn lint
        env:
          CI: true

  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 15

    # only run for tags
    if: contains(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - name: Check release is desired
        id: do-publish
        run: |
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "No Token"
          else
            PACKAGE_NAME=$(yarn info -s . name)
            PUBLISHED_VERSION=$(yarn info -s $PACKAGE_NAME version)
            THIS_VERSION=$(node -p "require('./package.json').version")
            # Simple bash helper to comapre version numbers
            verlte() {
              [  "$1" = "`echo -e "$1\n$2" | sort -V | head -n1`" ]
            }
            verlt() {
              [ "$1" = "$2" ] && return 1 || verlte $1 $2
            }
            if verlt $PUBLISHED_VERSION $THIS_VERSION
            then
              echo "Publishing latest"
              echo ::set-output name=tag::"latest"
            else
              echo "Publishing hotfix"
              echo ::set-output name=tag::"hotfix"
            fi
          fi
      - name: Prepare build
        if: ${{ steps.do-publish.outputs.tag }}
        run: |
          yarn install
          yarn build
        env:
          CI: true
      - name: Publish to NPM
        if: ${{ steps.do-publish.outputs.tag }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
          NEW_VERSION=$(node -p "require('./package.json').version")
          yarn publish --access=public --new-version=$NEW_VERSION --network-timeout 100000 --tag ${{ steps.do-publish.outputs.tag }}
          echo "**Published:** $NEW_VERSION" >> $GITHUB_STEP_SUMMARY
        env:
          CI: true
